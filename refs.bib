@ARTICLE{MOthman, 
  author       = {M. Othman and M. N. Kermanian}, 
  booktitle    = {2008 International Symposium on Information Technology}, 
  title        = {Detecting and preventing peer-to-peer connections by Linux iptables}, 
  year         = {2008}, 
  volume       = {4}, 
  pages        = {1-6}, 
  abstract     = {Most of companies use Linux iptables as their edge networks’ firewall. Although Linux iptables is a reputed secure stateful packet filter firewall package, it has some weaknesses. This package can not detect or control all peer-to-peer connections. One of the packages which is written for Linux iptables to manage peer-to-peer connections is layer 7-module. This module can not detect all peer-to-peer connections and drop them. Some peer-to-peer connections which use HTTP port for connecting to other peers are detected with this netfilter’s patch-o-matic but those which use static ports or dynamic ports for connecting to peers can not be detected with this module. For controlling peer-to-peer connections investigator blocked some peer-to-peer well known static ports with Linux iptables and then, for increasing the control of other peer-to-peer applications which used dynamic ports, he used QOS rules. Although this trend could drop most of peer-to-peer connections and save internet bandwidth, it was not the complete solution. He decided to control peer-topeer connections by implementing a new module which checks peer-to-peer payloads in his next investigation.}, 
  keywords     = {Access protocols;Bandwidth;Data security;Information security;Joining processes;Linux;Packaging;Peer to peer computing;Web and internet services;Web server}, 
  doi          = {10.1109/ITSIM.2008.4631860}, 
  ISSN         = {2155-8973}, 
  month        = {Aug},
}

@ARTICLE{DKavan, 
  author       = {D. Kavan and K. Škodová and M. Klíma}, 
  booktitle    = {2014 11th International Conference on Security and Cryptography (SECRYPT)}, 
  title        = {Network-based intrusion prevention system prototype with multi-detection: A position paper}, 
  year         = {2014}, 
  pages        = {1-9}, 
  abstract     = {The ongoing need to protect key nodes of network infrastructure has been a pressing issue since the outburst of modern Internet threats. This paper presents ideas on building a novel network-based intrusion prevention system combining the advantages of different types of latest intrusion detection systems. Special attention is also given to means of traffic data acquisition as well as security policy decision and enforcement possibilities. With regard to recent trends in PaaS and SaaS, common deployment specific for private and public cloud platforms is considered.}, 
  keywords     = {cloud computing;computer network security;telecommunication traffic;Internet threats;PaaS;SaaS;enforcement possibilities;multidetection;network infrastructure;network-based intrusion prevention system prototype;private cloud platforms;public cloud platforms;security policy decision;traffic data acquisition;Data acquisition;Detectors;Intrusion detection;Ports (Computers);Prototypes;Telecommunication traffic;CAMNEP;Detection;IDMEF;Intrusion Detection System;Intrusion Prevention System;Ipset;Iptables;Netflow;Network Behavior Analysis;PCAP;Signature-based;Snort;Traffic Generation}, 
  month        = {Aug},
}

@ARTICLE{BZdrnja,
  author       = {B. Zdrnja},
  journal      = {IEEE Security Privacy},
  title        = {Malicious JavaScript Insertion through ARP Poisoning Attacks},
  year         = {2009},
  volume       = {7},
  number       = {3},
  pages        = {72-74},
  abstract     = {The Address Resolution Protocol (ARP) is a core communication protocol used for LANs. RFC 826 defined it in 19821 but paid little attention to security. Although we've been aware of potential attacks against ARP for more than 10 years, we've only recently started observing them in the real world, especially from various Chinese hacking groups. Here, I explain ARP attack fundamentals and analyze recent attacks that used ARP poisoning against Web hosting companies to let attackers insert malicious code into virtually thousands of Web sites.}, 
  keywords     = {Java;Web sites;computer crime;local area networks;protocols;ARP poisoning attacks;LAN;Web hosting;Web sites;address resolution protocol;malicious JavaScript insertion;real-time network traffic modification;security;Access protocols;Ethernet networks;Internet;Java;Local area networks;Media Access Protocol;Security;Storage area networks;Storms;TCPIP;ARP;Address Resolution Protocol;arp poisoning;attack trends;malicious javascript insertion;network;security;security & privacy}, 
  doi          = {10.1109/MSP.2009.72}, 
  ISSN         = {1540-7993}, 
  month        = {May},
}

@ARTICLE{Kimh,
  author      ={Kim,H. and Huh,J. H.},
  year        ={2011},
  title       ={Detecting DNS-poisoning-based phishing attacks from their network performance characteristics},
  journal     ={Electronics Letters},
  volume      ={47},
  number      ={11},
  pages       ={1},
  abstract    ={Â  Most of the existing phishing detection techniques are weak against domain name system-poisoning-based phishing attacks. Proposed in this article is a highly effective method for detecting such attacks: the network performance characteristics of websites are used for classification. To demonstrate how useful the approach is, the performance of four classification algorithms are explored: linear discriminant analysis, naive Bayesian, K-nearest neighbour, and support vector machine. Over 10 000 real-world items of routing information have been observed during a one-week period. The experimental results show that, the best-performing classification method - which uses the K-nearest neighbour algorithm -- is capable of achieving a true positive rate of 99.4% and a false positive rate of 0.7%.;Â  Most of the existing phishing detection techniques are weak against domain name system-poisoning-based phishing attacks. Proposed in this article is a highly effective method for detecting such attacks: the network performance characteristics of websites are used for classification. To demonstrate how useful the approach is, the performance of four classification algorithms are explored: linear discriminant analysis, naive Bayesian, K-nearest neighbour, and support vector machine. Over 10 000 real-world items of routing information have been observed during a one-week period. The experimental results show that, the best-performing classification method - which uses the K-nearest neighbour algorithm -- is capable of achieving a true positive rate of 99.4% and a false positive rate of 0.7%.;},
  isbn        ={0013-5194},
  language    ={English},
}

@ARTICLE{Nam,
  author      = {Nam,Seung Y. and Kim,Dongwon and Kim,Jeongeun},
  year        = {2010},
  title       = {Enhanced ARP: preventing ARP poisoning-based man-in-the-middle attacks},
  journal     = {IEEE Communications Letters},
  volume      = {14},
  number      = {2},
  pages       = {187-189},
  abstract={In this letter, an enhanced version of Address Resolution Protocol (ARP) is proposed to prevent ARP poisoningbased Man-in-the-Middle (MITM) attacks. The proposed mechanism is based on the following concept. When a node knows the correct Media Access Control (MAC) address for a given IP address, if it retains the IP/MAC address mapping while that machine is alive, then MITM attack is impossible for that IP address. In order to prevent MITM attacks even for a new IP address, a voting-based resolution mechanism is proposed. The proposed scheme is backward compatible with existing ARP and incrementally deployable.;In this letter, an enhanced version of Address Resolution Protocol (ARP) is proposed to prevent ARP poisoningbased Man-in-the-Middle (MITM) attacks. The proposed mechanism is based on the following concept. When a node knows the correct Media Access Control (MAC) address for a given IP address, if it retains the IP/MAC address mapping while that machine is alive, then MITM attack is impossible for that IP address. In order to prevent MITM attacks even for a new IP address, a voting-based resolution mechanism is proposed. The proposed scheme is backward compatible with existing ARP and incrementally deployable.;In this letter, an enhanced version of Address Resolution Protocol (ARP) is proposed to prevent ARP poisoning-based Man-in-the-Middle (MITM) attacks. The proposed mechanism is based on the following concept. When a node knows the correct Media Access Control (MAC) address for a given IP address, if it retains the IP/MAC address mapping while that machine is alive, then MITM attack is impossible for that IP address. In order to prevent MITM attacks even for a new IP address, a voting-based resolution mechanism is proposed. The proposed scheme is backward compatible with existing ARP and incrementally deployable.;},
  keywords    = {man-in-the-middle attacks; voting-based resolution mechanism; Media Access Protocol; Switches; ARP cache poisoning; IP networks; address resolution protocol poisoning; Cryptography; ARP poisoning prevention; MAC address mapping; access protocols; media access control; Hardware; IP address mapping; man-in-the-middle attack; Ethernet networks; Mobile communication; Computer crime; computer network security; Voting},
  isbn       = {1089-7798},
  language   = {English},
}

@ARTICLE{Khan,
  author     ={Khan,Suleman and Gani,Abdullah and Abdul Wahab,Ainuddin W. and Guizani,Mohsen and Khan,Muhammad K.},
  year       = {2017},
  title      = {Topology Discovery in Software Defined Networks: Threats, Taxonomy, and State-of-the-Art},
  journal    = {IEEE Communications Surveys & Tutorials},
  volume     = {19},
  number     = {1},
  pages      = {303-324},
  abstract   = {The fundamental role of the software defined networks (SDNs) is to decouple the data plane from the control plane, thus providing a logically centralized visibility of the entire network to the controller. This enables the applications to innovate through network programmability. To establish a centralized visibility, a controller is required to discover a network topology of the entire SDN infrastructure. However, discovering a network topology is challenging due to: 1) the frequent migration of the virtual machines in the data centers; 2) lack of authentication mechanisms; 3) scarcity of the SDN standards; and 4) integration of security mechanisms for the topology discovery. To this end, in this paper, we present a comprehensive survey of the topology discovery and the associated security implications in SDNs. This survey provides discussions related to the possible threats relevant to each layer of the SDN architecture, highlights the role of the topology discovery in the traditional network and SDN, presents a thematic taxonomy of topology discovery in SDN, and provides insights into the potential threats to the topology discovery along with its state-of-the-art solutions in SDN. Finally, this survey also presents future challenges and research directions in the field of SDN topology discovery.;The fundamental role of the software defined networks (SDNs) is to decouple the data plane from the control plane, thus providing a logically centralized visibility of the entire network to the controller. This enables the applications to innovate through network programmability. To establish a centralized visibility, a controller is required to discover a network topology of the entire SDN infrastructure. However, discovering a network topology is challenging due to: 1) the frequent migration of the virtual machines in the data centers; 2) lack of authentication mechanisms; 3) scarcity of the SDN standards; and 4) integration of security mechanisms for the topology discovery. To this end, in this paper, we present a comprehensive survey of the topology discovery and the associated security implications in SDNs. This survey provides discussions related to the possible threats relevant to each layer of the SDN architecture, highlights the role of the topology discovery in the traditional network and SDN, presents a thematic taxonomy of topology discovery in SDN, and provides insights into the potential threats to the topology discovery along with its state-of-the-art solutions in SDN. Finally, this survey also presents future challenges and research directions in the field of SDN topology discovery.;},
  keywords   = {Software defined networking; Security; controller visibility; Topology discovery; topology poisoning; Tutorials; Computer architecture; Topology; Taxonomy; software defined networks security; vulnerabilities; Network topology},
  isbn       = {1553-877X},
  language   = {English},
}

@ARTICLE{KhanAbdul,
  author     = {Khan,Abdul N. and Qureshi,Kalim and Khan,Sumair},
  year       = {2009},
  title      = {Enhanced Switched Network Sniffer Detection Technique Based on IP Packet Routing},
  journal    = {Information Security Journal: A Global Perspective},
  volume     = {18},
  number     = {4},
  pages      = {153-162},
  abstract   = {Sniffers are program that are used to capture network packets illegally. It is a malicious activity performed by network users, and because of this network security is at risk. Detection of sniffers is an essential task to maintaining network security. Man in the middle (MiM) intrusion detection, switched network sniffer detection based on IP packet routing, and ARP watch detection techniques are used to detect a sniffer in switch Local Area Network (LAN) environments. This paper highlights the shortcomings of previous techniques that detect sniffers in switch LAN environments. We propose a new sniffer detection technique based on Internet Protocol (IP) packet routing that removes the shortcomings of previous techniques. Experimental results demonstrate that the proposed detection technique shows a significance improvement in network performance.},
  keywords   = {ARP cache poisoning; sniffer; network; intrusion detection},
  isbn       = {1939-3555},
  language   = {English},
}

@ARTICLE{Ismail,
  author     = {Ismail,Hatem and Germanus,Daniel and Suri,Neeraj},
  year       = {2017},
  title      = {P2P routing table poisoning: A quorum-based sanitizing approach},
  journal    = {Computers & Security},
  volume     = {65},
  pages      = {283-299},
  abstract   = {Peer-to-Peer (P2P) protocols underlie multiple networked applications given that the P2P decentralized design inherently fosters scalability and robustness. While distributiveness and scalability are attractive features, these facets also increase exposure to malicious peers which can propagate malicious routing information. Accordingly, a diverse set of continuously evolving attacks can be mounted that can cause severe service impairments over the entire overlay network. Most proposed countermeasures focus on providing diversity or redundancy to overcome malicious routing information with their emphasis on periodic detection/removal mechanisms done locally within a peer as continuous monitoring or global sharing of peer status entails high costs. However, a local approach naturally also limits the global effectiveness prompting the need for distributed solutions.},
  keywords   = {Poisoning},
  isbn       = {0167-4048},
  language   = {English},
}

@ARTICLE{Moon,
  author     = {Moon,Daesung and Lee,Jae D. and Jeong,Young-Sik and Park,Jong H.},
  year       = {2014},
  title      = {RTNSS: a routing trace-based network security system for preventing ARP spoofing attacks},
  journal    = {The Journal of Supercomputing},
  isbn       = {0920-8542},
  language   = {English},
}

@ARTICLE{AlQarni,
  author     = {Al-Qarni,Fatimah m.},
  year       = {2012},
  title      = {ARP Cache Poisoning Attack and Detection},
  journal    = {International Journal of Computer Science and Information Security},
  volume     = {10},
  number     = {7},
  pages      = {69},
  abstract   = {Â  Conclusion The security problems that the use of ARP introduces in a local area network (LAN) may create vulnerabilities to the distributed systems that run on these networks. [.]we recommend making the work and analysis as a group, so the students can share their experiences and knowledge with each other.;Â  Conclusion The security problems that the use of ARP introduces in a local area network (LAN) may create vulnerabilities to the distributed systems that run on these networks. [.]we recommend making the work and analysis as a group, so the students can share their experiences and knowledge with each other.;},
  keywords   = {Poisoning; Computer security; Data encryption; Poisons; Network security; Protocol},
  language   = {English},
}

@ARTICLE{Seo,
  year       = {2008},
  title      = {SEO poisoning epidemic explodes},
  journal    = {Network Security},
  volume     = {2008},
  number     = {4},
  pages      = {1-1},
  abstract   = {CNet's network of business sites was hit by an outbreak of search engine optimisation (SEO) poisoning attacks in March.;CNet's network of business sites was hit by an outbreak of search engine optimisation (SEO) poisoning attacks in March.;},
  isbn       = {1353-4858},
  language   = {English},
}

@ARTICLE{Wu,
  author     = {Wu,Hao and Dang,Xianglei and Wang,Lidong and He,Longtao},
  year       = {2016},
  title      = {Information fusion-based method for distributed domain name system cache poisoning attack detection and identification},
  journal    = {IET Information Security},
  volume     = {10},
  number     = {1},
  pages      = {37-44},
  abstract   = {In this study, the authors consider the detection and identification problems of distributed domain name system (DNS) cache poisoning attack. In the considered distributed attack, multiple cache servers are invaded simultaneously and the attack intensity for each cache server is slight. It is difficult to detect and identify the distributed attack by the existing local information-based detection methods, as the abnormal features for each cache server are indistinctive under distributed attack. To handle this problem, they propose an information fusion-based detection and identification methods. They find that the entropies of the query Internet protocol (IP) addresses for all cache servers are approximately stationary and statistically independent under normal cases. When distributed attack happens, they show the fact that the correlation of the entropies among all cache servers could increase dramatically. On the basis of this feature, they make use of principal component analysis to design the detection and identification methods. Specifically, attack is true when the maximum eigenvalue of the normalised entropies matrix exceeds a threshold, and the attacked servers are identified by the main loading vector. At last, they take a large-scale DNS in China and a simulation as two examples to show the effectiveness of their methods.},
  keywords   = {Research Articles},
  isbn       = {1751-8709},
  language   = {English},
}

@ARTICLE{Anderson,
  author     = {Anderson,Charles},
  year       = {2015},
  title      = {Docker [Software engineering]},
  journal    = {IEEE Software},
  volume     = {32},
  number     = {3},
  pages      = {102-c3},
  abstract   = {In episode 217 of Software Engineering Radio, host Charles Anderson talks with James Turnbull, a software developer and security specialist who's vice president of services at Docker. Lightweight Docker containers are rapidly becoming a tool for deploying microservice-based architectures.},
  keywords   = {Docker containers; James Turnbull; Software development; microservices; Docker; Interviews; SE Radio; Software engineering; Virtual machining; Software Engineering Radio; Virtual computer systems; Forecasts and trends; Usage},
  isbn       = {0740-7459},
  language   = {English},
}

@ARTICLE{Choudhari,
  author     = {Choudhari,Siddhi and Mhatre,Madhura},
  year       = {2015},
  title      = {Docker : run, ship and building applications},
  journal    = {International Journal of Latest Trends in Engineering and Technology},
  volume     = {6},
  number     = {2},
  keywords   = {Engineering (General). Civil engineering (General); TA1-2040; Technology},
  isbn       = {2319-3778;2278-621X;},
  language   = {English},
}

@ARTICLE{Kelley,
  author     = {Kelley,Brian and Prevost,John J. and Rad,Paul and Fatima,Aqsa},
  editor     = { },
  year       = {2016},
  title      = {Securing Cloud Containers Using Quantum Networking Channels},
  publisher  = {IEEE},
  pages      = {103-111},
  abstract   = {While all cloud based platforms possess security vulnerabilities, the additional security challenges with container systems stem from the sharing of Host OS among independent containers. If a malicious application was to break into the root of container Daemon, it could gain root access into the host kernel thereby compromising the entire system. It could create Denial-Of-Service attack for other user applications, rejecting service to other applications. In this paper, we propose a quantum network security framework for the cloud. We devise a means by which quantum particles, denoted entangled bell pairs, are routed to network nodes. This enables teleportation of quantum information between source and destination only when root privileges are required by an application. The secure quantum channel works on a use-once only policy, so the key data cannot be easily copied, regenerated or spoofed without detection. A network framework for multiple pre-staged channels is devised and we illustrate that policy for network routing of entangle particles formulated as a multi-tenant teleportation network, capable of disseminating key data to servers hosting Docker container applications. The framework can achieve provably high levels of security and is capable of integration into a cloud data center for securing applications using Docker Containers. We also describe quantum network layer protocols for cloud container security that leverage the unique properties of quantum entanglement. To resolve security concerns, this layer would control access between application and container daemon, thereby facilitating restricted communication with proper authentication.},
  keywords   = {Security; Containers; Virtualization; Quantum entanglement; Kernel; Cloud computing; container daemon; denial-ofservice; hypervisor; Hilbert space; kernel space; system calls; teleportation; qubits; quantum channel},
  language   = {English},
}

@ARTICLE{Boettiger,
  author     = {Boettiger,Carl},
  year       = {2015},
  title      = {An introduction to Docker for reproducible research},
  journal    = {ACM SIGOPS Operating Systems Review},
  volume     = {49},
  number     = {1},
  pages      = {71-79},
  abstract   = {As computational work becomes more and more integral to many aspects of scientific research, computational reproducibility has become an issue of increasing importance to computer systems researchers and domain scientists alike. Though computational reproducibility seems more straight forward than replicating physical experiments, the complex and rapidly changing nature of computer environments makes being able to reproduce and extend such work a serious challenge. In this paper, I explore common reasons that code developed for one research project cannot be successfully executed or extended by subsequent researchers. I review current approaches to these issues, including virtual machines and workflow systems, and their limitations. I then examine how the popular emerging technology Docker combines several areas from systems research - such as operating system virtualization, cross-platform portability, modular re-usable elements, versioning, and a 'DevOps' philosophy, to address these challenges. I illustrate this with several examples of Docker use with a focus on the R statistical environment.},
  isbn       = {0163-5980},
  language   = {English},
}

@ARTICLE{Guan,
  author     = {Guan,Xinjie and Wan,Xili and Choi,Baek-Young and Song,Sejun and Zhu,Jiafeng},
  year       = {2017;2016;},
  title      = {Application Oriented Dynamic Resource Allocation for Data Centers Using Docker Containers},
  journal    = {IEEE Communications Letters},
  volume     = {21},
  number     = {3},
  pages      = {504-507},
  abstract   = {Docker offers an opportunity for further improvement in data centers' (DCs) efficiency. However, existing models and schemes fall short to be efficiently used for Docker container-based resource allocation. We design a novel application oriented Docker container (AODC)-based resource allocation framework to minimize the application deployment cost in DCs, and to support automatic scaling while the workload of cloud applications varies. We then model the AODC resource allocation problem considering features of Docker, various applications' requirements, and available resources in cloud data centers, and propose a scalable algorithm for DCs with diverse and dynamic applications and massive physical resources.},
  keywords   = {resource allocation; Virtual machine monitors; Containers; Resource management; cost efficient; Data center; Libraries; Heuristic algorithms; application oriented; Cloud computing; Optimization},
  isbn       = {1089-7798},
  language   = {English},
}

@ARTICLE{DiTommaso,
  author     = {Di Tommaso,Paolo and Palumbo,Emilio and Chatzou,Maria and Prieto,Pablo and Heuer,Michael L. and Notredame,Cedric},
  year       = {2015},
  title      = {The impact of Docker containers on the performance of genomic pipelines},
  journal    = {PeerJ},
  volume     = {3},
  pages      = {e1273},
  abstract   = {Genomic pipelines consist of several pieces of third party software and, because of their experimental nature, frequent changes and updates are commonly necessary thus raising serious deployment and reproducibility issues. Docker containers are emerging as a possible solution for many of these problems, as they allow the packaging of pipelines in an isolated and self-contained manner. This makes it easy to distribute and execute pipelines in a portable manner across a wide range of computing platforms. Thus, the question that arises is to what extent the use of Docker containers might affect the performance of these pipelines. Here we address this question and conclude that Docker containers have only a minor impact on the performance of common genomic pipelines, which is negligible when the executed jobs are long in terms of computational time.;Genomic pipelines consist of several pieces of third party software and, because of their experimental nature, frequent changes and updates are commonly necessary thus raising serious deployment and reproducibility issues. Docker containers are emerging as a possible solution for many of these problems, as they allow the packaging of pipelines in an isolated and self-contained manner. This makes it easy to distribute and execute pipelines in a portable manner across a wide range of computing platforms. Thus, the question that arises is to what extent the use of Docker containers might affect the performance of these pipelines. Here we address this question and conclude that Docker containers have only a minor impact on the performance of common genomic pipelines, which is negligible when the executed jobs are long in terms of computational time.;},
  keywords   = {Medicine; Pipelines; Docker; Bioinformatics; Virtualisation; Workflow},
  isbn       = {2167-8359},
  language   = {English},
}

@ARTICLE{Rahman,
  title      = {Holistic Approach to ARP Poisoning and Countermeasures by Using Practical Examples and Paradigm},
  author     = {Rahman, Md F Abdur and Kamal, Parves}
}

@ARTICLE{Arp,
  title      = {Address Resolution Protocol (ARP)},
  url        = {www.cs.virginia.edu/\~cs458/slides/module06-arpV2.pdf},
  note       = {Accessed: 2017-03-01}
}

@ARTICLE{Gordon,
  author       = {Gordon Sun},
  title        = {Docker: Compare to Virtual Machine Part 3},
  howpublished = {\url{http://www.gordonsun.me/tag/docker/}},
  note         = {Accessed: 2017-03-01}
}

@ARTICLE{Patrick,
  author       = {Patrick Cooley},
  title        = {The nVisium Blog},
  howpublished = {\url{https://nvisium.com/blog/2014/10/15/docker-cache-friend-or-foe/}},
  note         = {Accessed: 2017-03-01}
}

@ARTICLE{TCombe, 
  author         = {T. Combe and A. Martin and R. Di Pietro}, 
  journal        = {IEEE Cloud Computing}, 
  title          = {To Docker or Not to Docker: A Security Perspective}, 
  year           = {2016}, 
  volume         = {3}, 
  number         = {5}, 
  pages          = {54-62}, 
  abstract       = {The need for ever-shorter development cycles, continuous delivery, and cost savings in cloud-based infrastructures led to the rise of containers, which are more flexible than virtual machines and provide near-native performance. Among all container solutions, Docker, a complete packaging and software delivery tool, currently leads the market. This article gives an overview of the container ecosystem and discusses the Docker environment's security implications through realistic use cases. The authors define an adversary model, point out several vulnerabilities affecting current Docker usage, and discuss further research directions.}, 
  keywords       = {cloud computing;security of data;software tools;Docker environment security;cloud-based infrastructures;container ecosystem;packaging tool;security perspective;software delivery tool;Cloud computing;Computer security;Containers;Cost benefit analysis;Linux;Product life cycle management;Virtual networks;Docker;cloud computing;containers;security;virtualization}, 
  doi            = {10.1109/MCC.2016.100}, 
  ISSN           = {2325-6095}, 
  month          = {Sept},
}

@INPROCEEDINGS{ARManu, 
  author           = {A. R. Manu and J. K. Patel and S. Akhtar and V. K. Agrawal and K. N. B. S. Murthy}, 
  booktitle        = {2016 International Conference on Circuit, Power and Computing Technologies (ICCPCT)}, 
  title            = {A study, analysis and deep dive on cloud PAAS security in terms of Docker container security}, 
  year             = {2016}, 
  pages            = {1-13}, 
  abstract         = {In this work we attempt to present the Cloud PAAS security by realizing in terms of Docker container security, we make a deep dive of the PAAS security and also try to analyse, compare and contrast the PAAS Docker container security, with other container technologies, and also with Virtual machine security with and without Hypervisor, and current security level of Dockers container and In this work we extend our previous work on Docker container security and look into methodology of improving the Dockers container security using Multilateral balance security.}, 
  keywords         = {cloud computing;security of data;virtual machines;cloud PAAS security;docker container security;hypervisor;multilateral balance security;platform-as-a-service;virtual machine security;Cloud computing;Computer architecture;Containers;Linux;Monitoring;Security;Testing;Cloud computing security;Docker container security;LXC security;Multilateral Security;PAAS security}, 
  doi              = {10.1109/ICCPCT.2016.7530284}, 
  month            = {March},
}

@INPROCEEDINGS{ARManu1,  
  author             = {A. R. Manu and J. K. Patel and S. Akhtar and V. K. Agrawal and K. N. B. S. Murthy}, 
  booktitle          = {2016 International Conference on Circuit, Power and Computing Technologies (ICCPCT)}, 
  title              = {Docker container security via heuristics-based multilateral security-conceptual and pragmatic study}, 
  year               = {2016}, 
  pages              = {1-14}, 
  abstract           = {In this paper we attempt to provide unified security and privacy multilateral security architecture for cloud services stack, using key latest technology via LxC in general and Docker containers in specific. Docker is one of the first to use LxC at such a large scale, but LxC is not a very new concept, it is around for quite some time. Docker container service is a key Platform as a Service (PaaS) based engine. Unified layered cloud computing multilateral security implementation addresses the potential risks associated with cloud computing environment. It also specifies when, at what time, where, and how to apply security controls. Unified Design includes the structured connection between the components of cloud ecosystem for basket and bucket of unified cloud-based hybrid services using micro service oriented venture architectural services realized in terms of PAAS using Docker container as a service. We surveyed various industry/academic professionals and based on our experience we tried to understand the challenges they faced while using the cloud system. We tried to understand the security challenges, incidents, story pieces, accidents, experience they faced while designing, implementing and using the cloud services/resources virtually via online. This work helps to assess the security design and architecture quality using multilateral security framework for Docker container. We try to present the architecture using OSI/TCP/IP stack model with reference to Cloud service stack model and deployment stack model and try to propose the balanced multilateral security prototype with reference to Docker Container security architecture.}, 
  keywords           = {cloud computing;open systems;resource allocation;security of data;transport protocols;LxC;OSI-TCP-IP stack model;PaaS;balanced multilateral security prototype;cloud computing environment;cloud services stack;cloud system;docker container security;docker container service;heuristics-based multilateral security-conceptual study;microservice oriented venture architectural services;platform as a service based engine;pragmatic study;unified cloud-based hybrid services;unified layered cloud computing multilateral security implementation;Cloud computing;Computational modeling;Computer architecture;Containers;Linux;Security;Teamwork;Cloud computing Security;Docker Container security;Multilateral Security;PAAS security}, 
  doi                = {10.1109/ICCPCT.2016.7530217}, 
  month              = {March},
}

@ARTICLE{PCVVARMA,
  title              = "Analysis of a Network IO Bottleneck in Big Data Environments Based on Docker Containers",
  journal            = "Big Data Research",
  volume             = "3",
  number             = "",
  pages              = "24 - 28",
  year               = "2016",
  note               = "Special Issue on Big Data from Networking Perspective",
  issn               = "2214-5796",
  doi                = "http://dx.doi.org/10.1016/j.bdr.2015.12.002",
  url                = "http://www.sciencedirect.com/science/article/pii/S2214579615000623",
  author             = "P. China Venkanna Varma and Venkata Kalyan Chakravarthy K. and V. Valli Kumari and S. Viswanadha Raju",
  keywords           = "Containers",
  keywords           = "Context switching",
  keywords           = "Docker",
  keywords           = "Hadoop",
  keywords           = "Map reduce",
  abstract           = "We live in a world increasingly driven by data with more information about individuals, companies and governments available than ever before. Now, every business is powered by Information Technology and generating Big data. Future Business Intelligence can be extracted from the big data. NoSQL [1] and Map-Reduce [2] technologies find an efficient way to store, organize and process the big data using Virtualization and Linux Container (a.k.a. Container) [3] technologies. Provisioning containers on top of virtual machines is a better model for high resource utilization. As the more containers share the same CPU, the context switch latency for each container increases significantly. Such increase leads to a negative impact on the network IO throughput and creates a bottleneck in the big data environments. As part of this paper, we studied container networking and various factors of context switch latency. We evaluate Hadoop benchmarks [5] against the number of containers and virtual machines. We observed a bottleneck where Hadoop [4] cluster throughput is not linear with the number of nodes sharing the same CPU. This bottleneck is due to virtual network layers which adds a significant delay to Round Trip Time (RTT) of data packets. Future work of this paper can be extended to analyze the practical implications of virtual network layers and a solution to improve the performance of big data environments based on containers."
}

@ARTICLE{Cha,
  Abstract           = {The cloud-computing paradigm has been driving the cloud-leveraged refactoring of existing information and communications technology services, including voice over IP (VoIP). In this paper, we design a prototype secure mobile VoIP (mVoIP) service with the open-source Asterisk private branch exchange (PBX) software, using Docker lightweight virtualization for mobile devices with the immutable concept of continuous integration and continuous deployment (CI/CD). In addition, the secure mVoIP service provides protection against eavesdropping and denial-of-service (DoS) attacks, using secure voice coding and real-time migration. We also experimentally verify the quality of the secure voice and the associated communication delay over a distributed global connectivity environment to protect against eavesdropping and real-time migration to mitigate DoS attacks.},
  Author             = {Cha, ByungRae and Kim, JongWon and Moon, HaeMin and Pan, SungBum},
  ISSN               = {16871472},
  Journal            = {EURASIP Journal on Wireless Communications and Networking},
  Number             = {1},
  Pages              = {1 - 14},
  Title              = {Global experimental verification of Docker-based secured mVoIP to protect against eavesdropping and DoS attacks.},
  Volume             = {2017},
  URL                = {http://search.ebscohost.com/login.aspx?direct=true&db=eoah&AN=41653973&site=pfi-live},
  Year               = {2017},
}

@ARTICLE{Knoth,
  Abstract           = {Geographic Object-Based Image Analysis (GEOBIA) mostly uses proprietary software, but the interest in Free and Open-Source Software (FOSS) for GEOBIA is growing. This interest stems not only from cost savings, but also from benefits concerning reproducibility and collaboration. Technical challenges hamper practical reproducibility, especially when multiple software packages are required to conduct an analysis. In this study, we use containerization to package a GEOBIA workflow in a well-defined FOSS environment. We explore the approach using two software stacks to perform an exemplary analysis detecting destruction of buildings in bi-temporal images of a conflict area. The analysis combines feature extraction techniques with segmentation and object-based analysis to detect changes using automatically-defined local reference values and to distinguish disappeared buildings from non-target structures. The resulting workflow is published as FOSS comprising both the model and data in a rea},
  Author             = {Knoth, Christian and Nüst, Daniel},
  ISSN               = {20724292},
  Journal            = {Remote Sensing},
  Keywords           = {OPEN source software, IMAGE analysis, COST control, FEATURE extraction (Data processing), OPERATING systems (Computers), conflict monitoring, containerization, Docker, GEOBIA, object-based image analysis, QGIS, reproducibility, reproducible research},
  Number             = {3},
  Pages              = {1 - 24},
  Title              = {Reproducibility and Practical Adoption of GEOBIA with Open-Source Software in Docker Containers.},
  Volume             = {9},
  URL                = {http://ezproxy.ncirl.ie/login?url=http://search.ebscohost.com/login.aspx?direct=true&AuthType=ip,cookie,uid&db=a9h&AN=122025585&site=eds-live&scope=site},
  Year               = {2017},
}

@ARTICLE{VDBerg,
  Abstract           = {NATO and the nations use distributed simulation environments for various purposes, such as training, mission rehearsal, and decision support in acquisition processes. Consequently, modeling and simulation (M&S) has become a critical technology for the coalition and its nations. Achieving interoperability between participating simulation systems and ensuring credibility of results currently often requires enormous effort with regards to time, personnel, and budget. Recent technical developments in the area of cloud computing technology and service oriented architecture (SOA) may offer opportunities to better utilize M&S capabilities in order to satisfy NATO critical needs. A new concept that includes service orientation and the provision of M&S applications via the as-a-service model of cloud computing may enable composable simulation environments that can be deployed rapidly and on-demand. This new concept is known as M&S as a Service (MSaaS). There has also been the recent emergence },
  Author             = {van den Berg, Tom and Siegel, Barry and Cramp, Anthony},
  ISSN               = {15485129},
  Journal            = {Journal of Defense Modeling & Simulation},
  Keywords           = {cloud computing, containerization, distributed simulation, high level architecture, Service orientation},
  Number             = {2},
  Pages              = {115},
  Title              = {Containerization of high level architecture-based simulations: A case study.},
  Volume             = {14},
  URL                = {http://ezproxy.ncirl.ie/login?url=http://search.ebscohost.com/login.aspx?direct=true&AuthType=ip,cookie,uid&db=edb&AN=121334554&site=eds-live&scope=site},
  Year               = {2017},
}

@INPROCEEDINGS{ADusia, 
  author             = {A. Dusia and Y. Yang and M. Taufer}, 
  booktitle          = {2015 IEEE International Conference on Cluster Computing}, 
  title              = {Network Quality of Service in Docker Containers}, 
  year               = {2015}, 
  pages              = {527-528}, 
  abstract           = {This poster presents an extension to the currently limited Docker's networks. Specifically, to guarantee quality of service (QoS) on the network, our extension allows users to assign priorities to Docker's containers and configures the network to service these containers based on their assigned priority. Providing QoS not only improves the user experience but also reduces the operation cost by allowing for the efficient use of resources. Our implementation ensures that time-sensitive and critical applications, hosted in high-priority containers, get a greater share of network bandwidth, without starving other containers.}, 
  keywords           = {Linux;quality of service;queueing theory;resource allocation;stochastic processes;Docker container;Linux traffic control;QoS;SFQ;TC;network bandwidth;network configuration;network quality of service;resource usage;stochastic fairness queueing;Bandwidth;Computers;Containers;Electronic mail;IP networks;Quality of service;Throughput;Containers;Docker;Virtual Machine (VM);network;quality of service (QoS)}, 
  doi                = {10.1109/CLUSTER.2015.96}, 
  ISSN               = {1552-5244}, 
  month              = {Sept},
}

@ARTICLE{Wei,
  Abstract           = {Geospatial big data analysis (GBDA) is extremely significant for time-constraint applications such as disaster response. However, the time-constraint analysis is not yet a trivial task in the cloud computing environment. Spatial query processing (SQP) is typical computation-intensive and indispensable for GBDA, and the spatial range query, join query, and the nearest neighbor query algorithms are not scalable without using MapReduce-liked frameworks. Parallel SQP algorithms (PSQPAs) are trapped in screw-processing, which is a known issue in Geoscience. To satisfy time-constrained GBDA, we propose an elastic SQP approach in this paper. First, Spark is used to implement PSQPAs. Second, Kubernetes-managed Core Operation System (CoreOS) clusters provide self-healing Docker containers for running Spark clusters in the cloud. Spark-based PSQPAs are submitted to Docker containers, where Spark master instances reside. Finally, the horizontal pod auto-scaler (HPA) would scale-out and scale-in },
  Author             = {Wei, Huang and Wen, Zhang and Dongying, Zhang and Lingkui, Meng},
  ISSN               = {2220-9964},
  Journal            = {ISPRS International Journal of Geo-Information, Vol 6, Iss 3, p 84 (2017)},
  Keywords           = {elasticity, spatial query processing, Spark, container, Kubernetes, OpenStack, Geography (General)},
  Number             = {3},
  Pages              = {84},
  Title              = {Elastic Spatial Query Processing in OpenStack Cloud Computing Environment for Time-Constraint Data Analysis.},
  URL                = {http://ezproxy.ncirl.ie/login?url=http://search.ebscohost.com/login.aspx?direct=true&AuthType=ip,cookie,uid&db=edsdoj&AN=edsdoj.ffb87479c9854518a705dde2da6e6090&site=eds-live&scope=site},
  Year               = {2017},
}

@ARTICLE{MinSu,
  Abstract           = {Despite the convenience, ubiquitous computing suffers from many threats and security risks. Security considerations in the ubiquitous network are required to create enriched and more secure ubiquitous environments. The address resolution protocol (ARP) is a protocol used to identify the IP address and the physical address of the associated network card. ARP is designed to work without problems in general environments. However, since it does not include security measures against malicious attacks, in its design, an attacker can impersonate another host using ARP spoofing or access important information. In this paper, we propose a new detection scheme for ARP spoofing attacks using a routing trace, which can be used to protect the internal network. Tracing routing can find the change of network movement path. The proposed scheme provides high constancy and compatibility because it does not alter the ARP protocol. In addition, it is simple and stable, as it does not use a complex algori},
  Author             = {Min Su, Song and Jae Dong, Lee and Young-Sik, Jeong and Hwa-Young, Jeong and Jong Hyuk, Park},
  ISSN               = {2356-6140},
  Journal            = {The Scientific World Journal, Vol 2014 (2014)},
  Keywords           = {Science (General)},
  Title              = {DS-ARP: A New Detection Scheme for ARP Spoofing Attacks Based on Routing Trace for Ubiquitous Environments.},
  URL                = {http://ezproxy.ncirl.ie/login?url=http://search.ebscohost.com/login.aspx?direct=true&AuthType=ip,cookie,uid&db=edsdoj&AN=edsdoj.3667829845ed8acbc71f9c31501a&site=eds-live&scope=site},
  Year               = {2014},
}

@INPROCEEDINGS{OSallou, 
  author             = {O. Sallou and C. Monjeaud}, 
  booktitle          = {2015 IEEE International Conference on Cluster Computing}, 
  title              = {GO-Docker: A Batch Scheduling System with Docker Containers}, 
  year               = {2015}, 
  pages              = {514-515}, 
  abstract           = {Multi user open source batch scheduling software based on Docker containers with custom scheduler and executor plugin mechanisms.}, 
  keywords           = {public domain software;scheduling;Docker containers;GO-docker system;batch scheduling system;custom scheduler;executor plugin mechanisms;multiuser open source batch scheduling software;Computer architecture;Containers;Monitoring;Operating systems;Processor scheduling;Docker;cluster;container;open source}, 
  doi                = {10.1109/CLUSTER.2015.89}, 
  ISSN               = {1552-5244}, 
  month              = {Sept},
}

@INPROCEEDINGS{SMcDaniel, 
  author            = {S. McDaniel and S. Herbein and M. Taufer}, 
  booktitle         = {2015 IEEE International Conference on Cluster Computing}, 
  title             = {A Two-Tiered Approach to I/O Quality of Service in Docker Containers}, 
  year              = {2015}, 
  pages             = {490-491}, 
  abstract          = {Linux containers allow applications to run in complete isolation from one another without the extra overhead of running entirely separate operating systems. This approach eliminates memory overheads associated with virtualization and virtual machines and helps businesses run their day-today applications. Unfortunately, multiple applications sharing the same resources can result in substantial resource contention among the applications in the containers and substantial performance loss. One way to mitigate this loss in performance is by ensuring quality of service (QoS) guaranteeing that the application of interest meets the performance requirements. Existing work targets ways of managing CPU, network, and memory contention, however, no solutions exist for managing contention associated with I/O. To address the I/O contention challenge in containers, we propose a two-tiered approach (i.e., at both the cluster and node levels) that extends Docker and Docker Swarm, making both capable of monitoring and controlling the I/O of Dockers containers. We demonstrate how our two-tiered approach has the potential for higher resource utilization without the effects of contention.}, 
  keywords          ={Linux;pattern clustering;quality of service;resource allocation;CPU management;Docker containers;Docker swarm;I/O contention challenge;I/O controlling;I/O monitoring;I/O quality of service;Linux containers;QoS guaranteeing;cluster levels;memory contention management;memory overheads;network management;node levels;performance loss;resource contention;resource utilization;resources sharing;two-tiered approach;virtual machines;virtualization;Bandwidth;Containers;Linux;Load management;Monitoring;Quality of service;Virtualization;Containers;Docker;Execution time;I/O schedule;Quality of Services (QoS);Virtual Machines}, 
  doi               = {10.1109/CLUSTER.2015.77}, 
  ISSN              = {1552-5244}, 
  month             = {Sept},
}

@INPROCEEDINGS{JClaassen, 
  author             = {J. Claassen and R. Koning and P. Grosso}, 
  booktitle          = {NOMS 2016 - 2016 IEEE/IFIP Network Operations and Management Symposium}, 
  title              = {Linux containers networking: Performance and scalability of kernel modules}, 
  year               = {2016}, 
  pages              = {713-717}, 
  abstract           = {Linux container virtualisation is gaining momentum as lightweight technology to support cloud and distributed computing. Applications relying on container architectures might at times rely on inter-container communication, and container networking solutions are emerging to address this need. Containers can be networked together as part of an overlay network, or with actual links from the container to the network via kernel modules. Most overlay solutions are not quite production ready yet; on the other hand kernel modules that can link a container to the network are much more mature. We benchmarked three kernel modules: veth, macvlan and ipvlan, to quantify their respective raw TCP and UDP performance and scalability. Our results show that the macvlan kernel module outperforms all other solutions in raw performance. All kernel modules seem to provide sufficient scalability to be deployed effectively in multi-containers environments.}, 
  keywords           = {Linux;cloud computing;overlay networks;Linux container virtualisation;Linux containers networking;cloud computing;distributed computing;kernel modules;overlay network;Bridges;Containers;Kernel;Linux;Performance evaluation;Switches;Testing}, 
  doi                = {10.1109/NOMS.2016.7502883}, 
  month              = {April},
}

@INPROCEEDINGS{AKrylovskiy, 
  author             = {A. Krylovskiy}, 
  booktitle          = {2015 IEEE 2nd World Forum on Internet of Things (WF-IoT)}, 
  title              = {Internet of Things gateways meet linux containers: Performance evaluation and discussion}, 
  year               = {2015}, 
  pages              = {222-227}, 
  abstract           = {Intenet of Things (IoT) applications often involve deployment of gateways at the network edge for integrating physical devices, pre-processing sensor data, and synchronizing it with the cloud. The deployment, configuration, and maintenance of the software running on the gateways in large-scale deployments is known to be challenging. In this work, we analyze the deployment requirements of IoT gateways and evaluate containerized deployment with linux containers as a potential approach addressing them. We perform several synthetic and application benchmarks providing an insight in the performance overhead introduced by linux containers and how they affect typical applications running on IoT gateways.}, 
  keywords           = {Internet of Things;Linux;internetworking;software maintenance;Internet of Things gateway;IoT application;IoT gateway;Linux container;containerized deployment;large-scale deployment;network edge;performance evaluation;performance overhead;preprocessing sensor data;software maintenance;Benchmark testing;Logic gates}, 
  doi                = {10.1109/WF-IoT.2015.7389056}, 
  month              = {Dec},
}

@INPROCEEDINGS{AMJoy, 
  author             = {A. M. Joy}, 
  booktitle          = {2015 International Conference on Advances in Computer Engineering and Applications}, 
  title              = {Performance comparison between Linux containers and virtual machines}, 
  year               = {2015}, 
  pages              = {342-346}, 
  abstract           = {With the advent of cloud computing and virtualization, modern distributed applications run on virtualized environments for hardware resource utilization and flexibility of operations in an infrastructure. However, when it comes to virtualization, resource overhead is involved. Linux containers can be an alternative to traditional virtualization technologies because of its high resource utilization and less overhead. This paper provides a comparison between Linux containers and virtual machines in terms of performance and scalability.}, 
  keywords           = {Linux;cloud computing;virtual machines;virtualisation;Linux containers;cloud computing;hardware resource utilization;resource overhead;virtual machines;virtualization technologies;virtualized environments;Containers;Linux;Scalability;Servers;Virtual machine monitors;Virtual machining;Virtualization;cloud computing;containers;docker;hypervisor;kubernetes;virtualization}, 
  doi                = {10.1109/ICACEA.2015.7164727}, 
  month              = {March},
}

@INPROCEEDINGS{HLv, 
  author             = {H. Lv and H. Li}, 
  booktitle          = {2011 International Conference on Information Management, Innovation Management and Industrial Engineering}, 
  title              = {Research on Intrusion Recognition and Tracing under Attack and Defense Confront Environment}, 
  year               = {2011}, 
  volume             = {3}, 
  pages              = {209-214}, 
  abstract           = {A new method for intrusion recognition and tracing under attack-defense confront environment is proposed in this paper. In order to do that antagonizing status and state transforming is deeply studied between attacker and defender, and all kinds of security information and knowledge are analyzed and formally described. Then based on obtained information, a safety model for attack-defense confronting is presented, from the model a safety state transition graph can be produced. The model is given a formalized description based on Expanded Finite-State Automata (EFSA), which visually describes both intruding process and defending process. The model is used to thoroughly analyze attack and defense activities and predict the subsequent safety state transitions, and also intuitively illustrates all possible routes and states during attacker's reaching specific target. So the model can be used to trace intruding process and deduce attack intention and target, further to predict follow-up attack, which can provide a useful evidence and guidance for attack response and security decision. Finally this method is demonstrated and validated in an example network environment.}, 
  keywords           = {finite state machines;graph theory;security of data;attack intention;attack response;attack target;attack-defense confront environment;expanded finite-state automata;formalized description;intrusion recognition;intrusion tracing;safety state transition graph;security decision;security information;security knowledge;Analytical models;Educational institutions;Erbium;Predictive models;Probes;Safety;Security;attack and defense;intrusion recognition;security confrontation;state tansition;tracing}, 
  doi                = {10.1109/ICIII.2011.333}, 
  ISSN               = {2155-1456}, 
  month              = {Nov},
}

@Inbook{Zhang2012,
  author             = "Zhang, Jialong and Yang, Chao and Xu, Zhaoyan and Gu, Guofei",
  editor             = "Balzarotti, Davide and Stolfo, Salvatore J. and Cova, Marco",
  title              = "PoisonAmplifier: A Guided Approach of Discovering Compromised Websites through Reversing Search Poisoning Attacks",
  bookTitle          = "Research in Attacks, Intrusions, and Defenses: 15th International Symposium, RAID 2012, Amsterdam, The Netherlands, September 12-14, 2012. Proceedings",
  year               = "2012",
  publisher          = "Springer Berlin Heidelberg",
  address            = "Berlin, Heidelberg",
  pages              = "230--253",
  abstract           = "Through injecting dynamic script codes into compromised websites, attackers have widely launched search poisoning attacks to achieve their malicious goals, such as spreading spam or scams, distributing malware and launching drive-by download attacks. While most current related work focuses on measuring or detecting specific search poisoning attacks in the crawled dataset, it is also meaningful to design an effective approach to find more compromised websites on the Internet that have been utilized by attackers to launch search poisoning attacks, because those compromised websites essentially become an important component in the search poisoning attack chain.",
  isbn               = "978-3-642-33338-5",
  doi                = "10.1007/978-3-642-33338-5_12",
  url                = "https://doi.org/10.1007/978-3-642-33338-5_12"
}

@INPROCEEDINGS{MGXavier, 
  author             = {M. G. Xavier and M. V. Neves and C. A. F. D. Rose}, 
  booktitle          = {2014 22nd Euromicro International Conference on Parallel, Distributed, and Network-Based Processing}, 
  title              = {A Performance Comparison of Container-Based Virtualization Systems for MapReduce Clusters}, 
  year               = {2014}, 
  pages              = {299-306}, 
  abstract           = {Virtualization as a platform for resource-intensive applications, such as MapReduce (MR), has been the subject of many studies in the last years, as it has brought benefits such as better manageability, overall resource utilization, security and scalability. Nevertheless, because of the performance overheads, virtualization has traditionally been avoided in computing environments where performance is a critical factor. In this context, container-based virtualization can be considered a lightweight alternative to the traditional hypervisor-based virtualization systems. In fact, there is a trend towards using containers in MR clusters in order to provide resource sharing and performance isolation (e.g., Mesos and YARN). However, there are still no studies evaluating the performance overhead of the current container-based systems and their ability to provide performance isolation when running MR applications. In this work, we conducted experiments to effectively compare and contrast the current container-based systems (Linux VServer, OpenVZ and Linux Containers (LXC)) in terms of performance and manageability when running on MR clusters. Our results showed that although all container-based systems reach a near-native performance for MapReduce workloads, LXC is the one that offers the best relationship between performance and management capabilities (specially regarding to performance isolation).}, 
  keywords           = {Linux;parallel processing;virtualisation;Linux VServer;Linux containers;MR applications;MapReduce clusters;OpenVZ;container-based virtualization systems;hypervisor-based virtualization systems;performance isolation;resource sharing;Benchmark testing;Containers;Kernel;Linux;Scalability;Throughput;Virtualization;Container-based virtualization;High performance computing;MapReduce}, 
  doi                = {10.1109/PDP.2014.78}, 
  ISSN               = {1066-6192}, 
  month              = {Feb},
}

@ARTICLE{Trabelsi
  author             = {Trabelsi,Z. and Shuaib,K.},
  year               = {2008},
  title              = {A NOVEL MAN-IN-THE-MIDDLE INTRUSION DETECTION SCHEME FOR SWITCHED LANs},
  journal            = {International Journal of Computers & Applications},
  volume             = {30},
  number             = {3},
  pages              = {234-243},
  note               = {Copyright - Copyright ACTA Press 2008; Document feature - Equations; Tables; Graphs; ; Last updated - 2016-08-28},
  abstract           = {The Man-in-the-Middle (MiM) attack is used by attackers to perform sniffing activities in switched LAN networks. The potential damage to a network from sniffing activities can be very significant. This paper proposes a mechanism for detecting malicious hosts performing MiM attack in switched LAN networks. The proposed mechanism consists of sending trap and spoofed packets to the network's hosts, after which, malicious sniffing hosts can be identified efficiently and accurately by collecting and analyzing the response packets. The effect of the proposed mechanism on the performance of the network is discussed and shown to be minimal. The limits of current security solutions regarding their ability to detect and prevent the MiM attack in switched LAN networks, are also discussed. PUBLICATION ABSTRACT]},
  keywords           = {Computers--Machine Theory; Data encryption; Product introduction; Network security; Computer security; Protocol; Data bases},
  isbn               = {1206212X},
  language           = {English},
  url                = {https://ezproxy.ncirl.ie/login?url=https://search.proquest.com/docview/219328210?accountid=103381},
}

@ARTICLE{CHEN201610,
  title              = {A Cloud Computing Based Network Monitoring and Threat Detection System for Critical Infrastructures},
  journal            = {Big Data Research},
  volume             = {3},
  number             = {},
  pages              = {10 - 23},
  year               = {2016},
  note               = {Special Issue on Big Data from Networking Perspective},
  issn               = {2214-5796},
  doi                = {http://dx.doi.org/10.1016/j.bdr.2015.11.002},
  url                = {http://www.sciencedirect.com/science/article/pii/S2214579615000520},
  author             = {Zhijiang Chen and Guobin Xu and Vivek Mahalingam and Linqiang Ge and James Nguyen and Wei Yu and Chao Lu},
  keywords           = {Network monitoring},
  keywords           = {Threat detection},
  keywords           = {Cloud computing},
  abstract           = {Critical infrastructure systems perform functions and missions that are essential for our national economy, health, and security. These functions are vital to commerce, government, and society and are closely interrelated with people's lives. To provide highly secured critical infrastructure systems, a scalable, reliable and robust threat monitoring and detection system should be developed to efficiently mitigate cyber threats. In addition, big data from threat monitoring systems pose serious challenges for cyber operations because an ever growing number of devices in the system and the amount of complex monitoring data collected from critical infrastructure systems require scalable methods to capture, store, manage, and process the big data. To address these challenges, in this paper, we propose a cloud computing based network monitoring and threat detection system to make critical infrastructure systems secure. Our proposed system consists of three main components: monitoring agents, cloud infrastructure, and an operation center. To build our proposed system, we use both Hadoop MapReduce and Spark to speed up data processing by separating and processing data streams concurrently. With a real-world data set, we conducted real-world experiments to evaluate the effectiveness of our developed network monitoring and threat detection system in terms of network monitoring, threat detection, and system performance. Our empirical data indicates that the proposed system can efficiently monitor network activities, find abnormal behaviors, and detect network threats to protect critical infrastructure systems.},
}


@ARTICLE{Aaron,
  title      = {NCC Group Whitepaper Understanding and Hardening Linux Containers},
  author     = {Aaron Grattafiori},
  year       = {2016},
  month      = {April},
}

@BOOK{Matthias,
  title={Docker: Up \& Running: Shipping Reliable Containers in Production},
  author={Matthias, Karl and Kane, Sean P},
  year={2015},
  publisher={" O'Reilly Media, Inc."}
}