@ARTICLE{BeloglazovB15,
  author       = {Anton Beloglazov and
                  Rajkumar Buyya},
  title        = {OpenStack Neat: a framework for dynamic and energy-efficient consolidation
                  of virtual machines in OpenStack clouds},
  journal      = {Concurrency and Computation: Practice and Experience},
  volume       = {27},
  number       = {5},
  pages        = {1310--1333},
  year         = {2015},
  doi          = {10.1002/cpe.3314},
}

@ARTICLE{FengB16,
  author       = {Guofu Feng and
                  Rajkumar Buyya},
  title        = {Maximum revenue-oriented resource allocation in cloud},
  journal      = {{IJGUC}},
  volume       = {7},
  number       = {1},
  pages        = {12--21},
  year         = {2016},
  doi          = {10.1504/IJGUC.2016.073772},
}

@ARTICLE{GomesCT15,
  author       = {Danielo G. Gomes and
                  Rodrigo N. Calheiros and
                  Rafael Tolosana{-}Calasanz},
  title        = {Introduction to the special issue on Cloud Computing: Recent Developments
                  and Challenging Issues},
  journal      = {Computers {\&} Electrical Engineering},
  volume       = {42},
  pages        = {31--32},
  year         = {2015},
  doi          = {10.1016/j.compeleceng.2015.03.008},
}

@ARTICLE{KuneKARB16,
  author       = {Raghavendra Kune and
                  Pramodkumar Konugurthi and
                  Arun Agarwal and
                  Chillarige Raghavendra Rao and
                  Rajkumar Buyya},
  title        = {The anatomy of big data computing},
  journal      = {Softw., Pract. Exper.},
  volume       = {46},
  number       = {1},
  pages        = {79--105},
  year         = {2016},
  doi          = {10.1002/spe.2374},
}

@ARTICLE{MOthman, 
  author       = {M. Othman and M. N. Kermanian}, 
  booktitle    = {2008 International Symposium on Information Technology}, 
  title        = {Detecting and preventing peer-to-peer connections by Linux iptables}, 
  year         = {2008}, 
  volume       = {4}, 
  pages        = {1-6}, 
  abstract     = {Most of companies use Linux iptables as their edge networks’ firewall. Although Linux iptables is a reputed secure stateful packet filter firewall package, it has some weaknesses. This package can not detect or control all peer-to-peer connections. One of the packages which is written for Linux iptables to manage peer-to-peer connections is layer 7-module. This module can not detect all peer-to-peer connections and drop them. Some peer-to-peer connections which use HTTP port for connecting to other peers are detected with this netfilter’s patch-o-matic but those which use static ports or dynamic ports for connecting to peers can not be detected with this module. For controlling peer-to-peer connections investigator blocked some peer-to-peer well known static ports with Linux iptables and then, for increasing the control of other peer-to-peer applications which used dynamic ports, he used QOS rules. Although this trend could drop most of peer-to-peer connections and save internet bandwidth, it was not the complete solution. He decided to control peer-topeer connections by implementing a new module which checks peer-to-peer payloads in his next investigation.}, 
  keywords     = {Access protocols;Bandwidth;Data security;Information security;Joining processes;Linux;Packaging;Peer to peer computing;Web and internet services;Web server}, 
  doi          = {10.1109/ITSIM.2008.4631860}, 
  ISSN         = {2155-8973}, 
  month        = {Aug},
}

@ARTICLE{DKavan, 
  author       = {D. Kavan and K. Škodová and M. Klíma}, 
  booktitle    = {2014 11th International Conference on Security and Cryptography (SECRYPT)}, 
  title        = {Network-based intrusion prevention system prototype with multi-detectio n: A position paper}, 
  year         = {2014}, 
  pages        = {1-9}, 
  abstract     = {The ongoing need to protect key nodes of network infrastructure has been a pressing issue since the outburst of modern Internet threats. This paper presents ideas on building a novel network-based intrusion prevention system combining the advantages of different types of latest intrusion detection systems. Special attention is also given to means of traffic data acquisition as well as security policy decision and enforcement possibilities. With regard to recent trends in PaaS and SaaS, common deployment specific for private and public cloud platforms is considered.}, 
  keywords     = {cloud computing;computer network security;telecommunication traffic;Internet threats;PaaS;SaaS;enforcement possibilities;multidetection;network infrastructure;network-based intrusion prevention system prototype;private cloud platforms;public cloud platforms;security policy decision;traffic data acquisition;Data acquisition;Detectors;Intrusion detection;Ports (Computers);Prototypes;Telecommunication traffic;CAMNEP;Detection;IDMEF;Intrusion Detection System;Intrusion Prevention System;Ipset;Iptables;Netflow;Network Behavior Analysis;PCAP;Signature-based;Snort;Traffic Generation}, 
  month        = {Aug},
}

@ARTICLE{BZdrnja, 
  author       = {B. Zdrnja}, 
  journal      = {IEEE Security Privacy}, 
  title        = {Malicious JavaScript Insertion through ARP Poisoning Attacks}, 
  year         = {2009}, 
  volume       = {7}, 
  number       = {3}, 
  pages        = {72-74}, 
  abstract     = {The Address Resolution Protocol (ARP) is a core communication protocol used for LANs. RFC 826 defined it in 19821 but paid little attention to security. Although we've been aware of potential attacks against ARP for more than 10 years, we've only recently started observing them in the real world, especially from various Chinese hacking groups. Here, I explain ARP attack fundamentals and analyze recent attacks that used ARP poisoning against Web hosting companies to let attackers insert malicious code into virtually thousands of Web sites.}, 
  keywords     = {Java;Web sites;computer crime;local area networks;protocols;ARP poisoning attacks;LAN;Web hosting;Web sites;address resolution protocol;malicious JavaScript insertion;real-time network traffic modification;security;Access protocols;Ethernet networks;Internet;Java;Local area networks;Media Access Protocol;Security;Storage area networks;Storms;TCPIP;ARP;Address Resolution Protocol;arp poisoning;attack trends;malicious javascript insertion;network;security;security & privacy}, 
  doi          = {10.1109/MSP.2009.72}, 
  ISSN         = {1540-7993}, 
  month        = {May},
}


@ARTICLE{Kimh,
  author      ={Kim,H. and Huh,J. H.},
  year        ={2011},
  title       ={Detecting DNS-poisoning-based phishing attacks from their network performance characteristics},
  journal     ={Electronics Letters},
  volume      ={47},
  number      ={11},
  pages       ={1},
  abstract    ={Â  Most of the existing phishing detection techniques are weak against domain name system-poisoning-based phishing attacks. Proposed in this article is a highly effective method for detecting such attacks: the network performance characteristics of websites are used for classification. To demonstrate how useful the approach is, the performance of four classification algorithms are explored: linear discriminant analysis, naive Bayesian, K-nearest neighbour, and support vector machine. Over 10 000 real-world items of routing information have been observed during a one-week period. The experimental results show that, the best-performing classification method - which uses the K-nearest neighbour algorithm -- is capable of achieving a true positive rate of 99.4% and a false positive rate of 0.7%.;Â  Most of the existing phishing detection techniques are weak against domain name system-poisoning-based phishing attacks. Proposed in this article is a highly effective method for detecting such attacks: the network performance characteristics of websites are used for classification. To demonstrate how useful the approach is, the performance of four classification algorithms are explored: linear discriminant analysis, naive Bayesian, K-nearest neighbour, and support vector machine. Over 10 000 real-world items of routing information have been observed during a one-week period. The experimental results show that, the best-performing classification method - which uses the K-nearest neighbour algorithm -- is capable of achieving a true positive rate of 99.4% and a false positive rate of 0.7%.;},
  isbn        ={0013-5194},
  language    ={English},
}

@ARTICLE{Nam,
  author      = {Nam,Seung Y. and Kim,Dongwon and Kim,Jeongeun},
  year        = {2010},
  title       = {Enhanced ARP: preventing ARP poisoning-based man-in-the-middle attacks},
  journal     = {IEEE Communications Letters},
  volume      = {14},
  number      = {2},
  pages       = {187-189},
  abstract={In this letter, an enhanced version of Address Resolution Protocol (ARP) is proposed to prevent ARP poisoningbased Man-in-the-Middle (MITM) attacks. The proposed mechanism is based on the following concept. When a node knows the correct Media Access Control (MAC) address for a given IP address, if it retains the IP/MAC address mapping while that machine is alive, then MITM attack is impossible for that IP address. In order to prevent MITM attacks even for a new IP address, a voting-based resolution mechanism is proposed. The proposed scheme is backward compatible with existing ARP and incrementally deployable.;In this letter, an enhanced version of Address Resolution Protocol (ARP) is proposed to prevent ARP poisoningbased Man-in-the-Middle (MITM) attacks. The proposed mechanism is based on the following concept. When a node knows the correct Media Access Control (MAC) address for a given IP address, if it retains the IP/MAC address mapping while that machine is alive, then MITM attack is impossible for that IP address. In order to prevent MITM attacks even for a new IP address, a voting-based resolution mechanism is proposed. The proposed scheme is backward compatible with existing ARP and incrementally deployable.;In this letter, an enhanced version of Address Resolution Protocol (ARP) is proposed to prevent ARP poisoning-based Man-in-the-Middle (MITM) attacks. The proposed mechanism is based on the following concept. When a node knows the correct Media Access Control (MAC) address for a given IP address, if it retains the IP/MAC address mapping while that machine is alive, then MITM attack is impossible for that IP address. In order to prevent MITM attacks even for a new IP address, a voting-based resolution mechanism is proposed. The proposed scheme is backward compatible with existing ARP and incrementally deployable.;},
  keywords    = {man-in-the-middle attacks; voting-based resolution mechanism; Media Access Protocol; Switches; ARP cache poisoning; IP networks; address resolution protocol poisoning; Cryptography; ARP poisoning prevention; MAC address mapping; access protocols; media access control; Hardware; IP address mapping; man-in-the-middle attack; Ethernet networks; Mobile communication; Computer crime; computer network security; Voting},
  isbn       = {1089-7798},
  language   = {English},
}


@ARTICLE{Khan,
  author     ={Khan,Suleman and Gani,Abdullah and Abdul Wahab,Ainuddin W. and Guizani,Mohsen and Khan,Muhammad K.},
  year       = {2017},
  title      = {Topology Discovery in Software Defined Networks: Threats, Taxonomy, and State-of-the-Art},
  journal    = {IEEE Communications Surveys & Tutorials},
  volume     = {19},
  number     = {1},
  pages      = {303-324},
  abstract   = {The fundamental role of the software defined networks (SDNs) is to decouple the data plane from the control plane, thus providing a logically centralized visibility of the entire network to the controller. This enables the applications to innovate through network programmability. To establish a centralized visibility, a controller is required to discover a network topology of the entire SDN infrastructure. However, discovering a network topology is challenging due to: 1) the frequent migration of the virtual machines in the data centers; 2) lack of authentication mechanisms; 3) scarcity of the SDN standards; and 4) integration of security mechanisms for the topology discovery. To this end, in this paper, we present a comprehensive survey of the topology discovery and the associated security implications in SDNs. This survey provides discussions related to the possible threats relevant to each layer of the SDN architecture, highlights the role of the topology discovery in the traditional network and SDN, presents a thematic taxonomy of topology discovery in SDN, and provides insights into the potential threats to the topology discovery along with its state-of-the-art solutions in SDN. Finally, this survey also presents future challenges and research directions in the field of SDN topology discovery.;The fundamental role of the software defined networks (SDNs) is to decouple the data plane from the control plane, thus providing a logically centralized visibility of the entire network to the controller. This enables the applications to innovate through network programmability. To establish a centralized visibility, a controller is required to discover a network topology of the entire SDN infrastructure. However, discovering a network topology is challenging due to: 1) the frequent migration of the virtual machines in the data centers; 2) lack of authentication mechanisms; 3) scarcity of the SDN standards; and 4) integration of security mechanisms for the topology discovery. To this end, in this paper, we present a comprehensive survey of the topology discovery and the associated security implications in SDNs. This survey provides discussions related to the possible threats relevant to each layer of the SDN architecture, highlights the role of the topology discovery in the traditional network and SDN, presents a thematic taxonomy of topology discovery in SDN, and provides insights into the potential threats to the topology discovery along with its state-of-the-art solutions in SDN. Finally, this survey also presents future challenges and research directions in the field of SDN topology discovery.;},
  keywords   = {Software defined networking; Security; controller visibility; Topology discovery; topology poisoning; Tutorials; Computer architecture; Topology; Taxonomy; software defined networks security; vulnerabilities; Network topology},
  isbn       = {1553-877X},
  language   = {English},
}


@ARTICLE{KhanAbdul,
  author     = {Khan,Abdul N. and Qureshi,Kalim and Khan,Sumair},
  year       = {2009},
  title      = {Enhanced Switched Network Sniffer Detection Technique Based on IP Packet Routing},
  journal    = {Information Security Journal: A Global Perspective},
  volume     = {18},
  number     = {4},
  pages      = {153-162},
  abstract   = {Sniffers are program that are used to capture network packets illegally. It is a malicious activity performed by network users, and because of this network security is at risk. Detection of sniffers is an essential task to maintaining network security. Man in the middle (MiM) intrusion detection, switched network sniffer detection based on IP packet routing, and ARP watch detection techniques are used to detect a sniffer in switch Local Area Network (LAN) environments. This paper highlights the shortcomings of previous techniques that detect sniffers in switch LAN environments. We propose a new sniffer detection technique based on Internet Protocol (IP) packet routing that removes the shortcomings of previous techniques. Experimental results demonstrate that the proposed detection technique shows a significance improvement in network performance.},
  keywords   = {ARP cache poisoning; sniffer; network; intrusion detection},
  isbn       = {1939-3555},
  language   = {English},
}


@ARTICLE{Ismail,
  author     = {Ismail,Hatem and Germanus,Daniel and Suri,Neeraj},
  year       = {2017},
  title      = {P2P routing table poisoning: A quorum-based sanitizing approach},
  journal    = {Computers & Security},
  volume     = {65},
  pages      = {283-299},
  abstract   = {Peer-to-Peer (P2P) protocols underlie multiple networked applications given that the P2P decentralized design inherently fosters scalability and robustness. While distributiveness and scalability are attractive features, these facets also increase exposure to malicious peers which can propagate malicious routing information. Accordingly, a diverse set of continuously evolving attacks can be mounted that can cause severe service impairments over the entire overlay network. Most proposed countermeasures focus on providing diversity or redundancy to overcome malicious routing information with their emphasis on periodic detection/removal mechanisms done locally within a peer as continuous monitoring or global sharing of peer status entails high costs. However, a local approach naturally also limits the global effectiveness prompting the need for distributed solutions.},
  keywords   = {Poisoning},
  isbn       = {0167-4048},
  language   = {English},
}


@ARTICLE{Moon,
  author     = {Moon,Daesung and Lee,Jae D. and Jeong,Young-Sik and Park,Jong H.},
  year       = {2014},
  title      = {RTNSS: a routing trace-based network security system for preventing ARP spoofing attacks},
  journal    = {The Journal of Supercomputing},
  isbn       = {0920-8542},
  language   = {English},
}


@ARTICLE{AlQarni,
  author     = {Al-Qarni,Fatimah m.},
  year       = {2012},
  title      = {ARP Cache Poisoning Attack and Detection},
  journal    = {International Journal of Computer Science and Information Security},
  volume     = {10},
  number     = {7},
  pages      = {69},
  abstract   = {Â  Conclusion The security problems that the use of ARP introduces in a local area network (LAN) may create vulnerabilities to the distributed systems that run on these networks. [.]we recommend making the work and analysis as a group, so the students can share their experiences and knowledge with each other.;Â  Conclusion The security problems that the use of ARP introduces in a local area network (LAN) may create vulnerabilities to the distributed systems that run on these networks. [.]we recommend making the work and analysis as a group, so the students can share their experiences and knowledge with each other.;},
  keywords   = {Poisoning; Computer security; Data encryption; Poisons; Network security; Protocol},
  language   = {English},
}


@ARTICLE{Seo,
  year       = {2008},
  title      = {SEO poisoning epidemic explodes},
  journal    = {Network Security},
  volume     = {2008},
  number     = {4},
  pages      = {1-1},
  abstract   = {CNet's network of business sites was hit by an outbreak of search engine optimisation (SEO) poisoning attacks in March.;CNet's network of business sites was hit by an outbreak of search engine optimisation (SEO) poisoning attacks in March.;},
  isbn       = {1353-4858},
  language   = {English},
}


@ARTICLE{Wu,
  author     = {Wu,Hao and Dang,Xianglei and Wang,Lidong and He,Longtao},
  year       = {2016},
  title      = {Information fusion-based method for distributed domain name system cache poisoning attack detection and identification},
  journal    = {IET Information Security},
  volume     = {10},
  number     = {1},
  pages      = {37-44},
  abstract   = {In this study, the authors consider the detection and identification problems of distributed domain name system (DNS) cache poisoning attack. In the considered distributed attack, multiple cache servers are invaded simultaneously and the attack intensity for each cache server is slight. It is difficult to detect and identify the distributed attack by the existing local information-based detection methods, as the abnormal features for each cache server are indistinctive under distributed attack. To handle this problem, they propose an information fusion-based detection and identification methods. They find that the entropies of the query Internet protocol (IP) addresses for all cache servers are approximately stationary and statistically independent under normal cases. When distributed attack happens, they show the fact that the correlation of the entropies among all cache servers could increase dramatically. On the basis of this feature, they make use of principal component analysis to design the detection and identification methods. Specifically, attack is true when the maximum eigenvalue of the normalised entropies matrix exceeds a threshold, and the attacked servers are identified by the main loading vector. At last, they take a large-scale DNS in China and a simulation as two examples to show the effectiveness of their methods.},
  keywords   = {Research Articles},
  isbn       = {1751-8709},
  language   = {English},
}


@ARTICLE{Anderson,
  author     = {Anderson,Charles},
  year       = {2015},
  title      = {Docker [Software engineering]},
  journal    = {IEEE Software},
  volume     = {32},
  number     = {3},
  pages      = {102-c3},
  abstract   = {In episode 217 of Software Engineering Radio, host Charles Anderson talks with James Turnbull, a software developer and security specialist who's vice president of services at Docker. Lightweight Docker containers are rapidly becoming a tool for deploying microservice-based architectures.},
  keywords   = {Docker containers; James Turnbull; Software development; microservices; Docker; Interviews; SE Radio; Software engineering; Virtual machining; Software Engineering Radio; Virtual computer systems; Forecasts and trends; Usage},
  isbn       = {0740-7459},
  language   = {English},
}


@ARTICLE{Choudhari,
  author     = {Choudhari,Siddhi and Mhatre,Madhura},
  year       = {2015},
  title      = {Docker : run, ship and building applications},
  journal    = {International Journal of Latest Trends in Engineering and Technology},
  volume     = {6},
  number     = {2},
  keywords   = {Engineering (General). Civil engineering (General); TA1-2040; Technology},
  isbn       = {2319-3778;2278-621X;},
  language   = {English},
}

@ARTICLE{Kelley,
  author     = {Kelley,Brian and Prevost,John J. and Rad,Paul and Fatima,Aqsa},
  editor     = { },
  year       = {2016},
  title      = {Securing Cloud Containers Using Quantum Networking Channels},
  publisher  = {IEEE},
  pages      = {103-111},
  abstract   = {While all cloud based platforms possess security vulnerabilities, the additional security challenges with container systems stem from the sharing of Host OS among independent containers. If a malicious application was to break into the root of container Daemon, it could gain root access into the host kernel thereby compromising the entire system. It could create Denial-Of-Service attack for other user applications, rejecting service to other applications. In this paper, we propose a quantum network security framework for the cloud. We devise a means by which quantum particles, denoted entangled bell pairs, are routed to network nodes. This enables teleportation of quantum information between source and destination only when root privileges are required by an application. The secure quantum channel works on a use-once only policy, so the key data cannot be easily copied, regenerated or spoofed without detection. A network framework for multiple pre-staged channels is devised and we illustrate that policy for network routing of entangle particles formulated as a multi-tenant teleportation network, capable of disseminating key data to servers hosting Docker container applications. The framework can achieve provably high levels of security and is capable of integration into a cloud data center for securing applications using Docker Containers. We also describe quantum network layer protocols for cloud container security that leverage the unique properties of quantum entanglement. To resolve security concerns, this layer would control access between application and container daemon, thereby facilitating restricted communication with proper authentication.},
  keywords   = {Security; Containers; Virtualization; Quantum entanglement; Kernel; Cloud computing; container daemon; denial-ofservice; hypervisor; Hilbert space; kernel space; system calls; teleportation; qubits; quantum channel},
  language   = {English},
}

@ARTICLE{Boettiger,
  author     = {Boettiger,Carl},
  year       = {2015},
  title      = {An introduction to Docker for reproducible research},
  journal    = {ACM SIGOPS Operating Systems Review},
  volume     = {49},
  number     = {1},
  pages      = {71-79},
  abstract   = {As computational work becomes more and more integral to many aspects of scientific research, computational reproducibility has become an issue of increasing importance to computer systems researchers and domain scientists alike. Though computational reproducibility seems more straight forward than replicating physical experiments, the complex and rapidly changing nature of computer environments makes being able to reproduce and extend such work a serious challenge. In this paper, I explore common reasons that code developed for one research project cannot be successfully executed or extended by subsequent researchers. I review current approaches to these issues, including virtual machines and workflow systems, and their limitations. I then examine how the popular emerging technology Docker combines several areas from systems research - such as operating system virtualization, cross-platform portability, modular re-usable elements, versioning, and a 'DevOps' philosophy, to address these challenges. I illustrate this with several examples of Docker use with a focus on the R statistical environment.},
  isbn       = {0163-5980},
  language   = {English},
}

@ARTICLE{Guan,
  author     = {Guan,Xinjie and Wan,Xili and Choi,Baek-Young and Song,Sejun and Zhu,Jiafeng},
  year       = {2017;2016;},
  title      = {Application Oriented Dynamic Resource Allocation for Data Centers Using Docker Containers},
  journal    = {IEEE Communications Letters},
  volume     = {21},
  number     = {3},
  pages      = {504-507},
  abstract   = {Docker offers an opportunity for further improvement in data centers' (DCs) efficiency. However, existing models and schemes fall short to be efficiently used for Docker container-based resource allocation. We design a novel application oriented Docker container (AODC)-based resource allocation framework to minimize the application deployment cost in DCs, and to support automatic scaling while the workload of cloud applications varies. We then model the AODC resource allocation problem considering features of Docker, various applications' requirements, and available resources in cloud data centers, and propose a scalable algorithm for DCs with diverse and dynamic applications and massive physical resources.},
  keywords   = {resource allocation; Virtual machine monitors; Containers; Resource management; cost efficient; Data center; Libraries; Heuristic algorithms; application oriented; Cloud computing; Optimization},
  isbn       = {1089-7798},
  language   = {English},
}

@ARTICLE{DiTommaso,
  author     = {Di Tommaso,Paolo and Palumbo,Emilio and Chatzou,Maria and Prieto,Pablo and Heuer,Michael L. and Notredame,Cedric},
  year       = {2015},
  title      = {The impact of Docker containers on the performance of genomic pipelines},
  journal    = {PeerJ},
  volume     = {3},
  pages      = {e1273},
  abstract   = {Genomic pipelines consist of several pieces of third party software and, because of their experimental nature, frequent changes and updates are commonly necessary thus raising serious deployment and reproducibility issues. Docker containers are emerging as a possible solution for many of these problems, as they allow the packaging of pipelines in an isolated and self-contained manner. This makes it easy to distribute and execute pipelines in a portable manner across a wide range of computing platforms. Thus, the question that arises is to what extent the use of Docker containers might affect the performance of these pipelines. Here we address this question and conclude that Docker containers have only a minor impact on the performance of common genomic pipelines, which is negligible when the executed jobs are long in terms of computational time.;Genomic pipelines consist of several pieces of third party software and, because of their experimental nature, frequent changes and updates are commonly necessary thus raising serious deployment and reproducibility issues. Docker containers are emerging as a possible solution for many of these problems, as they allow the packaging of pipelines in an isolated and self-contained manner. This makes it easy to distribute and execute pipelines in a portable manner across a wide range of computing platforms. Thus, the question that arises is to what extent the use of Docker containers might affect the performance of these pipelines. Here we address this question and conclude that Docker containers have only a minor impact on the performance of common genomic pipelines, which is negligible when the executed jobs are long in terms of computational time.;},
  keywords   = {Medicine; Pipelines; Docker; Bioinformatics; Virtualisation; Workflow},
  isbn       = {2167-8359},
  language   = {English},
}

@ARTICLE{Rahman,
  title      = {Holistic Approach to ARP Poisoning and Countermeasures by Using Practical Examples and Paradigm},
  author     = {Rahman, Md F Abdur and Kamal, Parves}
}

@ARTICLE{Arp,
  title        = {Address Resolution Protocol (ARP)},
  howpublished = {\url{http://www.cs.virginia.edu/~cs458/slides/module06-arpV2.pdf}},
  note         = {Accessed: 2017-03-01}
}

@ARTICLE{Gordon,
  author       = {Gordon Sun},
  title        = {Docker: Compare to Virtual Machine Part 3},
  howpublished = {\url{http://www.gordonsun.me/tag/docker/}},
  note         = {Accessed: 2017-03-01}
}

@ARTICLE{Patrick,
  author       = {Patrick Cooley},
  title        = {The nVisium Blog},
  howpublished = {\url{https://nvisium.com/blog/2014/10/15/docker-cache-friend-or-foe/}},
  note         = {Accessed: 2017-03-01}
}

@ARTICLE{TCombe, 
  author         = {T. Combe and A. Martin and R. Di Pietro}, 
  journal        = {IEEE Cloud Computing}, 
  title          = {To Docker or Not to Docker: A Security Perspective}, 
  year           = {2016}, 
  volume         = {3}, 
  number         = {5}, 
  pages          = {54-62}, 
  abstract       = {The need for ever-shorter development cycles, continuous delivery, and cost savings in cloud-based infrastructures led to the rise of containers, which are more flexible than virtual machines and provide near-native performance. Among all container solutions, Docker, a complete packaging and software delivery tool, currently leads the market. This article gives an overview of the container ecosystem and discusses the Docker environment's security implications through realistic use cases. The authors define an adversary model, point out several vulnerabilities affecting current Docker usage, and discuss further research directions.}, 
  keywords       = {cloud computing;security of data;software tools;Docker environment security;cloud-based infrastructures;container ecosystem;packaging tool;security perspective;software delivery tool;Cloud computing;Computer security;Containers;Cost benefit analysis;Linux;Product life cycle management;Virtual networks;Docker;cloud computing;containers;security;virtualization}, 
  doi            = {10.1109/MCC.2016.100}, 
  ISSN           = {2325-6095}, 
  month          = {Sept},
}
